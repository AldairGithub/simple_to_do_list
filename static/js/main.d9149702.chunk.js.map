{"version":3,"sources":["components/header/Header.jsx","components/search_bar/SearchBar.jsx","components/add_task/AddTask.jsx","components/task/Task.jsx","components/to_do_list/ToDoList.jsx","components/main/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","colors","style","textDecorationColor","Math","ceil","random","length","className","SearchBar","props","newTask","input","setInput","placeholder","type","name","value","onChange","e","target","maxLength","onClick","AddTask","onNewTask","motion","div","initial","translateY","opacity","animate","transition","duration","exit","onSubmit","disabled","Task","task","list","editList","deleteTask","useState","displayEditTask","setDisplayEditTask","text","editedTask","setEditedTask","getIdFromList","indexOf","inputPresent","attr","AnimatePresence","variants","visible","x","hidden","preventDefault","icon","faPen","size","faTrash","ToDoList","filteredList","map","ele","id","y","Main","setList","displayAddTask","setDisplayAddTask","addTaskInput","setAddTaskInput","searchInput","setSearchInput","useEffect","getList","JSON","parse","window","localStorage","getItem","arr","str","updateLocalStorage","removeItem","setItem","stringify","newList","filter","index","toLowerCase","includes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9149702.chunk.js","sourcesContent":["import React from 'react'\n\nimport './Header.css'\n\nexport default function Header() {\n\n  const colors = [\n    '#84CEEB',\n    '#5AB9EA',\n    '#5680E9',\n    '#8860D0'\n  ]\n\n  return (\n    <>\n      <div>\n        <h1 style={{textDecorationColor: `${colors[Math.ceil(Math.random() * colors.length + 1)]}`}} className='header-title'>To Do List</h1>\n      </div>\n    </>\n  )\n}","import React from 'react'\n\nimport './SearchBar.css'\n\nexport default function SearchBar(props) {\n  const { newTask, input, setInput } = props\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setInput({\n      [name]: value\n    })\n  }\n  \n  return (\n    <>\n      <div className='input-container'>\n        <input\n          className='input-display'\n          placeholder='&#xF002; Search'\n          type='text'\n          name='text'\n          value={input}\n          onChange={handleChange}\n          maxLength={25}\n        />\n        <div className='input-button-container'>\n          <button\n            className='input-button'\n            onClick={newTask}\n          >\n            Add task\n          </button>\n        </div>\n      </div>\n    </>\n  )\n}","import React from 'react'\nimport { motion } from 'framer-motion'\n\nimport './AddTask.css'\n\nexport default function AddTask(props) {\n  const { input, setInput, onNewTask } = props\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setInput({\n      [name]: value\n    })\n  }\n\n\n  return (\n    <>\n      <motion.div\n        // start of div, position\n        initial={{ translateY: \"0px\", opacity: 0 }}\n        // move div on the y axis (vertically) while changing opacity\n        animate={{ translateY: \"55px\", opacity: 1 }}\n        // how long it takes for animation to finish\n        transition={{ duration: 0.5 }}\n        // when div is removed from tree\n        exit={{translateY: \"0px\", opacity: 0}}\n      >\n        <form className='input-container' onSubmit={onNewTask}>\n          <input\n            className='input-display'\n            placeholder='&#xF067; Add task'\n            name='text'\n            value={input}\n            onChange={handleChange}\n          />\n          <div className='add-task-input-button'>\n            <button\n              className='add-task-button'\n              style={{ opacity: `${input.length === 0 ? '0.5' : '1'}` }}\n              disabled={input.length === 0 ? true : false}\n            >\n              save\n            </button>\n          </div>\n\n        </form>\n      </motion.div>\n    </>\n  )\n}","import React, {useState} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPen } from '@fortawesome/free-solid-svg-icons'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { AnimatePresence, motion } from 'framer-motion'\n\nimport './Task.css'\n\nexport default function Task(props) {\n  const { task, list, editList, deleteTask } = props\n\n  const [displayEditTask, setDisplayEditTask] = useState(false)\n  const [editedTask, setEditedTask] = useState({\n    text: ''\n  })\n  const getIdFromList = () => {\n    const getId = list.indexOf(task)\n    return getId\n  }\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setEditedTask({\n      [name]: value\n    })\n  }\n  const handleEditedTask = (e) => {\n    e.preventDefault()\n    editList(getIdFromList(), editedTask.text)\n    setEditedTask({\n      text: ''\n    })\n    setDisplayEditTask(false)\n  }\n  const handleDisplayingEditTask = () => {\n    setDisplayEditTask(!displayEditTask)\n    setEditedTask({\n      text: ''\n    })\n  }\n  const handleDeletedTask = (e) => {\n    e.preventDefault()\n    setEditedTask({\n      text: ''\n    })\n    deleteTask(getIdFromList())\n  }\n\n  const inputPresent = (attr) => {\n    if (attr === 'opacity') {\n      if (editedTask.text.length === 0) {\n        return '0.5'\n      } else {\n        return '1'\n      }\n    } else if (attr === 'disabled') {\n      if (editedTask.text.length === 0) {\n        return true\n      } else {\n        return false\n      }\n    }\n  }\n\n  const variants = {\n    visible: {\n      x: '0px', opacity: 1\n    },\n    hidden: {\n      x: '-15px', opacity: 0\n    }\n  }\n  const textVariants = {\n    visible: {\n      x: '0px', opacity: 1\n    },\n    hidden: {\n      x: '15px', opacity: 0\n    }\n  }\n\n  return (\n    <>\n      <div className='task-container'>\n            {displayEditTask ?\n            <>\n              <AnimatePresence>\n                <motion.div\n                  initial='hidden'\n                  animate='visible'\n                  variants={variants}\n                  transition={{ duration: 0.5 }}\n                  exit='hidden'\n                >\n                  <form\n                    className='edit-task-container'\n                    onSubmit={handleEditedTask}\n                  >\n                    <input\n                      className='edit-task-input'\n                      name='text'\n                      value={editedTask.text}\n                      placeholder='&#xF039; Edit task'\n                      onChange={handleChange}\n                      maxLength={25}\n                    />\n                    <button\n                      className='edit-task-button'\n                      style={{ opacity: `${inputPresent('opacity')}` }}\n                      disabled={inputPresent('disabled')}\n                    >\n                      Save\n                    </button>\n                  </form>\n              </motion.div>\n              </AnimatePresence>\n            </>\n            :\n          <>\n            <motion.div\n              initial='hidden'\n              animate='visible'\n              variants={textVariants}\n              transition={{ duration: 0.5 }}\n              exit='hidden'\n            >\n              <p className='task-text'>{ task }</p>\n            </motion.div>\n            </>\n          }\n      <div className='task-icons-container'>\n        <div>\n          <FontAwesomeIcon\n            icon={faPen}\n            size='1x'\n            onClick={handleDisplayingEditTask}\n          />\n        </div>\n        <div>\n          <FontAwesomeIcon\n            icon={faTrash}\n            size='1x'\n            onClick={handleDeletedTask}\n          />\n        </div>\n        </div>\n      </div>\n    </>\n  )\n}","import React from 'react'\nimport './ToDoList.css'\nimport Task from '../task/Task'\n\nimport { AnimatePresence, motion } from 'framer-motion'\n\nexport default function ToDoList(props) {\n  const { list, editList, deleteTask, filteredList } = props\n  \n  return (\n    <>\n      {filteredList !== null ?\n        <>\n          <AnimatePresence>\n          {filteredList.map((ele, id) => (\n            <motion.div\n              key={id}\n              initial={{ y: '-25px', opacity: 0 }}\n              animate={{ y: '0px', opacity: 1 }}\n              transition={{duration: 0.5}}\n              exit={{y: '-25px', opacity: 0}}\n            >\n              <Task\n                task={ele}\n                list={list}\n                editList={editList}\n                deleteTask={deleteTask}\n              />\n            </motion.div>            \n          ))}\n          </AnimatePresence>\n        </>\n        :\n        null\n      }\n    </>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport { AnimatePresence } from 'framer-motion'\nimport Header from '../header/Header'\nimport SearchBar from '../search_bar/SearchBar'\nimport AddTask from '../add_task/AddTask'\nimport ToDoList from '../to_do_list/ToDoList'\n\nimport './Main.css'\n\n\nexport default function Main() {\n  const [list, setList] = useState([])\n\n  const [displayAddTask, setDisplayAddTask] = useState(false)\n\n  const [addTaskInput, setAddTaskInput] = useState({\n    text: ''\n  })\n  const [searchInput, setSearchInput] = useState({\n    text: ''\n  })\n\n  useEffect(() => {\n    const getList = JSON.parse(window.localStorage.getItem('List'))\n    if (getList !== null) {\n      setList(\n        getList\n      )\n    }\n  }, [])\n\n  const newTask = () => {\n    setDisplayAddTask(!displayAddTask)\n  }\n  const updateLocalStorage = (arr) => {\n    window.localStorage.removeItem('List')\n    window.localStorage.setItem('List', JSON.stringify(arr))\n  }\n  const onNewTask = (e) => {\n    e.preventDefault()\n    if (list === null) {\n      const newList = [addTaskInput.text]\n      setList(\n        newList\n      )\n      updateLocalStorage(newList)\n    } else {\n      const newList = [...list, addTaskInput.text]\n      setList(\n        newList\n      )\n      updateLocalStorage(newList)\n    }\n    setAddTaskInput({\n      text: ''\n    })\n    setDisplayAddTask(false)\n  }\n\n  const editList = (id, str) => {\n    const newList = [...list]\n    newList[id] = str\n    setList(\n      newList\n    )\n    updateLocalStorage(newList)\n  }\n  const deleteTask = (id) => {\n    const filter = list.filter((ele, index) => index !== id)\n    setList(\n      filter\n    )\n    updateLocalStorage(filter)\n  }\n\n  const filterSearch = (arr, str) => {\n    return arr.filter(ele => {\n      return ele.toLowerCase().includes(str)\n    })\n  }\n  return (\n    <>\n      <div className='main-container'>\n        <Header />\n        <div className='searchbar-addtask-container'>\n          <SearchBar\n            newTask={newTask}\n            input={searchInput.text}\n            setInput={setSearchInput}\n            list={list}\n            setList={setList}\n          />\n          {/* component must be first animatable child of AnimatePresence in order for exit attribute to work */}\n          <AnimatePresence>\n            {displayAddTask &&\n              <>\n                <AddTask\n                  input={addTaskInput.text}\n                  setInput={setAddTaskInput}\n                  onNewTask={onNewTask}\n                />\n              </>\n            }    \n          </AnimatePresence>\n        </div>\n\n        <ToDoList\n          list={list}\n          editList={editList}\n          deleteTask={deleteTask}\n          filteredList={filterSearch(list, searchInput.text)}\n        />\n      </div>\n    </>\n  )\n}","import React from 'react'\nimport './App.css';\n\nimport Main from './components/main/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main>\n        <Main />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}